{
  "swaggerVersion": "1.2",
  "apiVersion": "1.0",
  "basePath": "https://next.cloud.dreamfactory.com/rest",
  "resourcePath": "/schema",
  "produces": [
    "application/json",
    "application/xml"
  ],
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "apis": [
    {
      "path": "/schema",
      "operations": [
        {
          "method": "GET",
          "summary": "getResources() - List resources available for database schema.",
          "nickname": "getResources",
          "type": "Resources",
          "notes": "See listed operations for each resource available."
        },
        {
          "method": "POST",
          "summary": "createTables() - Create one or more tables.",
          "nickname": "createTables",
          "type": "Resources",
          "parameters": [
            {
              "name": "tables",
              "description": "Array of table definitions.",
              "allowMultiple": false,
              "type": "Tables",
              "paramType": "body",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "Post data should be a single table definition or an array of table definitions."
        },
        {
          "method": "PUT",
          "summary": "updateTables() - Update one or more tables.",
          "nickname": "updateTables",
          "type": "Resources",
          "parameters": [
            {
              "name": "tables",
              "description": "Array of table definitions.",
              "allowMultiple": false,
              "type": "Tables",
              "paramType": "body",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "Post data should be a single table definition or an array of table definitions."
        }
      ],
      "description": "Operations available for SQL DB Schemas."
    },
    {
      "path": "/schema/{table_name}",
      "operations": [
        {
          "method": "GET",
          "summary": "describeTable() - Retrieve table definition for the given table.",
          "nickname": "describeTable",
          "type": "TableSchema",
          "parameters": [
            {
              "name": "table_name",
              "description": "Name of the table to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "This describes the table, its fields and relations to other tables."
        },
        {
          "method": "POST",
          "summary": "createFields() - Create one or more fields in the given table.",
          "nickname": "createFields",
          "type": "Success",
          "parameters": [
            {
              "name": "table_name",
              "description": "Name of the table to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            },
            {
              "name": "fields",
              "description": "Array of field definitions.",
              "allowMultiple": false,
              "type": "Fields",
              "paramType": "body",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "Post data should be an array of field properties for a single record or an array of fields."
        },
        {
          "method": "PUT",
          "summary": "updateFields() - Update one or more fields in the given table.",
          "nickname": "updateFields",
          "type": "Success",
          "parameters": [
            {
              "name": "table_name",
              "description": "Name of the table to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            },
            {
              "name": "fields",
              "description": "Array of field definitions.",
              "allowMultiple": false,
              "type": "Fields",
              "paramType": "body",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "Post data should be an array of field properties for a single record or an array of fields."
        },
        {
          "method": "DELETE",
          "summary": "deleteTable() - Delete (aka drop) the given table.",
          "nickname": "deleteTable",
          "type": "Success",
          "parameters": [
            {
              "name": "table_name",
              "description": "Name of the table to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "Careful, this drops the database table and all of its contents."
        }
      ],
      "description": "Operations for per table administration."
    },
    {
      "path": "/schema/{table_name}/{field_name}",
      "operations": [
        {
          "method": "GET",
          "summary": "describeField() - Retrieve the definition of the given field for the given table.",
          "nickname": "describeField",
          "type": "FieldSchema",
          "parameters": [
            {
              "name": "table_name",
              "description": "Name of the table to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            },
            {
              "name": "field_name",
              "description": "Name of the field to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "This describes the field and its properties."
        },
        {
          "method": "PUT",
          "summary": "updateField() - Update one record by identifier.",
          "nickname": "updateField",
          "type": "Success",
          "parameters": [
            {
              "name": "table_name",
              "description": "Name of the table to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            },
            {
              "name": "field_name",
              "description": "Name of the field to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            },
            {
              "name": "field_props",
              "description": "Array of field properties.",
              "allowMultiple": false,
              "type": "FieldSchema",
              "paramType": "body",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "Post data should be an array of field properties for the given field."
        },
        {
          "method": "DELETE",
          "summary": "deleteField() - Remove the given field from the given table.",
          "nickname": "deleteField",
          "type": "Success",
          "parameters": [
            {
              "name": "table_name",
              "description": "Name of the table to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            },
            {
              "name": "field_name",
              "description": "Name of the field to perform operations on.",
              "allowMultiple": false,
              "type": "string",
              "paramType": "path",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "message": "Bad Request - Request does not have a valid format, all required parameters, etc.",
              "code": 400
            },
            {
              "message": "Unauthorized Access - No currently valid session available.",
              "code": 401
            },
            {
              "message": "System Error - Specific reason is included in the error message.",
              "code": 500
            }
          ],
          "notes": "Careful, this drops the database table field/column and all of its contents."
        }
      ],
      "description": "Operations for single field administration."
    }
  ],
  "models": {
    "Resources": {
      "id": "Resources",
      "properties": {
        "resource": {
          "type": "Array",
          "description": "Array of resources available by this service.",
          "items": {
            "$ref": "Resource"
          }
        }
      }
    },
    "Resource": {
      "id": "Resource",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource."
        }
      }
    },
    "Success": {
      "id": "Success",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "True when API call was successful, false or error otherwise."
        }
      }
    },
    "Tables": {
      "id": "Tables",
      "properties": {
        "field": {
          "type": "Array",
          "description": "An array of table definitions.",
          "items": {
            "$ref": "TableSchema"
          }
        }
      }
    },
    "TableSchema": {
      "id": "TableSchema",
      "properties": {
        "name": {
          "type": "string",
          "description": "Identifier/Name for the table."
        },
        "label": {
          "type": "string",
          "description": "Displayable singular name for the table."
        },
        "plural": {
          "type": "string",
          "description": "Displayable plural name for the table."
        },
        "primary_key": {
          "type": "string",
          "description": "Field(s), if any, that represent the primary key of each record."
        },
        "name_field": {
          "type": "string",
          "description": "Field(s), if any, that represent the name of each record."
        },
        "field": {
          "type": "Array",
          "description": "An array of available fields in each record.",
          "items": {
            "$ref": "FieldSchema"
          }
        },
        "related": {
          "type": "Array",
          "description": "An array of available relationships to other tables.",
          "items": {
            "$ref": "RelatedSchema"
          }
        }
      }
    },
    "Fields": {
      "id": "Fields",
      "properties": {
        "field": {
          "type": "Array",
          "description": "An array of field definitions.",
          "items": {
            "$ref": "FieldSchema"
          }
        }
      }
    },
    "FieldSchema": {
      "id": "FieldSchema",
      "properties": {
        "name": {
          "type": "string",
          "description": "The API name of the field."
        },
        "label": {
          "type": "string",
          "description": "The displayable label for the field."
        },
        "type": {
          "type": "string",
          "description": "The DSP abstract data type for this field."
        },
        "db_type": {
          "type": "string",
          "description": "The native database type used for this field."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum length allowed (in characters for string, displayed for numbers)."
        },
        "precision": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of places for numbers."
        },
        "scale": {
          "type": "integer",
          "format": "int32",
          "description": "Number of decimal places allowed for numbers."
        },
        "default_value": {
          "type": "string",
          "description": "Default value for this field."
        },
        "required": {
          "type": "boolean",
          "description": "Is a value required for record creation."
        },
        "allow_null": {
          "type": "boolean",
          "description": "Is null allowed as a value."
        },
        "fixed_length": {
          "type": "boolean",
          "description": "Is the length fixed (not variable)."
        },
        "supports_multibyte": {
          "type": "boolean",
          "description": "Does the data type support multibyte characters."
        },
        "auto_increment": {
          "type": "boolean",
          "description": "Does the integer field value increment upon new record creation."
        },
        "is_primary_key": {
          "type": "boolean",
          "description": "Is this field used as/part of the primary key."
        },
        "is_foreign_key": {
          "type": "boolean",
          "description": "Is this field used as a foreign key."
        },
        "ref_table": {
          "type": "string",
          "description": "For foreign keys, the referenced table name."
        },
        "ref_fields": {
          "type": "string",
          "description": "For foreign keys, the referenced table field name."
        },
        "validation": {
          "type": "Array",
          "description": "validations to be performed on this field.",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "Array",
          "description": "Selectable string values for picklist validation.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RelatedSchema": {
      "id": "RelatedSchema",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the relationship."
        },
        "type": {
          "type": "string",
          "description": "Relationship type - belongs_to, has_many, many_many."
        },
        "ref_table": {
          "type": "string",
          "description": "The table name that is referenced by the relationship."
        },
        "ref_field": {
          "type": "string",
          "description": "The field name that is referenced by the relationship."
        },
        "join": {
          "type": "string",
          "description": "The intermediate joining table used for many_many relationships."
        },
        "field": {
          "type": "string",
          "description": "The current table field that is used in the relationship."
        }
      }
    }
  }
}